


ARM Macro Assembler    Page 1 


    1 00000000 E000ED04 
                       NVIC_INT_CTRL
                               EQU              0xE000ED04  ; Interrupt control
                                                             state register.
    2 00000000 E000ED22 
                       NVIC_SYSPRI14
                               EQU              0xE000ED22  ; System priority r
                                                            egister (priority 1
                                                            4).
    3 00000000 000000FF 
                       NVIC_PENDSV_PRI
                               EQU              0xFF        ; PendSV priority v
                                                            alue (lowest).
    4 00000000 10000000 
                       NVIC_PENDSVSET
                               EQU              0x10000000  ; Value to trigger 
                                                            PendSV exception.
    5 00000000         
    6 00000000         
    7 00000000                 PRESERVE8                    ;8×Ö½Ú¶ÔÆë£¿
    8 00000000                 THUMB
    9 00000000         
   10 00000000                 AREA             CODE, CODE, READONLY
   11 00000000         
   12 00000000                 EXTERN           g_OS_CPU_ExceptStkBase ;µ÷ÓÃÍâ²
                                                            ¿µÄ±äÁ¿»òº¯Êý
   13 00000000         
   14 00000000                 EXTERN           g_OS_Tcb_CurP
   15 00000000                 EXTERN           g_OS_Tcb_HighRdyP
   16 00000000                 EXTERN           g_Prio_Cur
   17 00000000                 EXTERN           g_Prio_HighRdy
   18 00000000         
   19 00000000                 EXPORT           OSStart_Asm ;¹©Íâ²¿µ÷ÓÃµÄ±äÁ¿»ò
                                                            º¯Êý
   20 00000000                 EXPORT           PendSV_Handler
   21 00000000                 EXPORT           OSCtxSw
   22 00000000                 EXPORT           OS_CPU_SR_Save
   23 00000000                 EXPORT           OS_CPU_SR_Restore
   24 00000000         
   25 00000000         OS_CPU_SR_Save
   26 00000000 F3EF 8010       MRS              R0, PRIMASK ; Set prio int mask
                                                             to mask all (excep
                                                            t faults)
   27 00000004 B672            CPSID            I
   28 00000006 4770            BX               LR
   29 00000008         
   30 00000008         OS_CPU_SR_Restore
   31 00000008 F380 8810       MSR              PRIMASK, R0
   32 0000000C 4770            BX               LR
   33 0000000E         
   34 0000000E         OSCtxSw
   35 0000000E 4819            LDR              R0, =NVIC_INT_CTRL
   36 00000010 F04F 5180       LDR              R1, =NVIC_PENDSVSET
   37 00000014 6001            STR              R1, [R0]
   38 00000016 4770            BX               LR          ; Enable interrupts
                                                             at processor level
                                                            
   39 00000018         
   40 00000018         OSStart_Asm



ARM Macro Assembler    Page 2 


   41 00000018 4817            LDR              R0, =NVIC_SYSPRI14 ; Set the Pe
                                                            ndSV exception prio
                                                            rity
   42 0000001A F04F 01FF       LDR              R1, =NVIC_PENDSV_PRI
   43 0000001E 7001            STRB             R1, [R0]
   44 00000020         
   45 00000020 2000            MOVS             R0, #0      ; Set the PSP to 0 
                                                            for initial context
                                                             switch call
   46 00000022 F380 8809       MSR              PSP, R0
   47 00000026         
   48 00000026 4815            LDR              R0, =g_OS_CPU_ExceptStkBase ; I
                                                            nitialize the MSP t
                                                            o the OS_CPU_Except
                                                            StkBase
   49 00000028 6801            LDR              R1, [R0]
   50 0000002A F381 8808       MSR              MSP, R1
   51 0000002E         
   52 0000002E 4811            LDR              R0, =NVIC_INT_CTRL ; Trigger th
                                                            e PendSV exception 
                                                            (causes context swi
                                                            tch)
   53 00000030 F04F 5180       LDR              R1, =NVIC_PENDSVSET
   54 00000034 6001            STR              R1, [R0]
   55 00000036         
   56 00000036 B662            CPSIE            I           ; Enable interrupts
                                                             at processor level
                                                            
   57 00000038         
   58 00000038         OSStartHang
   59 00000038 E7FE            B                OSStartHang ; Should never get 
                                                            here
   60 0000003A         
   61 0000003A         
   62 0000003A         
   63 0000003A         PendSV_Handler
   64 0000003A B672            CPSID            I           ; Prevent interrupt
                                                            ion during context 
                                                            switch
   65 0000003C F3EF 8009       MRS              R0, PSP     ; PSP is process st
                                                            ack pointer
   66 00000040 B128            CBZ              R0, OS_CPU_PendSVHandler_nosave
 
                                                            ; Skip register sav
                                                            e the first time
   67 00000042         
   68 00000042 3820            SUBS             R0, R0, #0x20 ; Save remaining 
                                                            regs r4-11 on proce
                                                            ss stack
   69 00000044 E880 0FF0       STM              R0, {R4-R11}
   70 00000048         
   71 00000048 490D            LDR              R1, =g_OS_Tcb_CurP ; OSTCBCur->
                                                            OSTCBStkPtr = SP;
   72 0000004A 6809            LDR              R1, [R1]
   73 0000004C 6008            STR              R0, [R1]    ; R0 is SP of proce
                                                            ss being switched o
                                                            ut
   74 0000004E         
   75 0000004E         ; At this point, entire context of process has been save



ARM Macro Assembler    Page 3 


                       d
   76 0000004E         OS_CPU_PendSVHandler_nosave
   77 0000004E         
   78 0000004E 480D            LDR              R0, =g_Prio_Cur ; OSPrioCur = O
                                                            SPrioHighRdy;
   79 00000050 490D            LDR              R1, =g_Prio_HighRdy
   80 00000052 780A            LDRB             R2, [R1]
   81 00000054 7002            STRB             R2, [R0]
   82 00000056         
   83 00000056 480A            LDR              R0, =g_OS_Tcb_CurP ; OSTCBCur  
                                                            = OSTCBHighRdy;
   84 00000058 490C            LDR              R1, =g_OS_Tcb_HighRdyP
   85 0000005A 680A            LDR              R2, [R1]
   86 0000005C 6002            STR              R2, [R0]
   87 0000005E         
   88 0000005E 6810            LDR              R0, [R2]    ; R0 is new process
                                                             SP; SP = OSTCBHigh
                                                            Rdy->OSTCBStkPtr;
   89 00000060         
   90 00000060 E890 0FF0       LDM              R0, {R4-R11} ; Restore r4-11 fr
                                                            om new process stac
                                                            k
   91 00000064 3020            ADDS             R0, R0, #0x20
   92 00000066         
   93 00000066 F380 8809       MSR              PSP, R0     ; Load PSP with new
                                                             process SP
   94 0000006A F04E 0E04       ORR              LR, LR, #0x04 ; Ensure exceptio
                                                            n return uses proce
                                                            ss stack
   95 0000006E         
   96 0000006E B662            CPSIE            I
   97 00000070 4770            BX               LR          ; Exception return 
                                                            will restore remain
                                                            ing context
   98 00000072         
   99 00000072                 END
              00 00 E000ED04 
              E000ED22 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M7.fp.dp --apcs=
interwork --depend=stm32f767zi_os\os_port.d -ostm32f767zi_os\os_port.o -I.\RTE\
_stm32f767zi_os -I"E:\Program Files (x86)\Keil_v526\ARM\PACK\ARM\CMSIS\5.4.0\CM
SIS\Core\Include" -I"E:\Program Files (x86)\Keil_v526\ARM\PACK\Keil\STM32F7xx_D
FP\2.12.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include" --predefine="__MICROLIB SE
TA 1" --predefine="__UVISION_VERSION SETA 526" --predefine="_RTE_ SETA 1" --pre
define="STM32F767xx SETA 1" --list=os_port.lst ..\OS\os_port.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CODE 00000000

Symbol: CODE
   Definitions
      At line 10 in file ..\OS\os_port.s
   Uses
      None
Comment: CODE unused
OSCtxSw 0000000E

Symbol: OSCtxSw
   Definitions
      At line 34 in file ..\OS\os_port.s
   Uses
      At line 21 in file ..\OS\os_port.s
Comment: OSCtxSw used once
OSStartHang 00000038

Symbol: OSStartHang
   Definitions
      At line 58 in file ..\OS\os_port.s
   Uses
      At line 59 in file ..\OS\os_port.s
Comment: OSStartHang used once
OSStart_Asm 00000018

Symbol: OSStart_Asm
   Definitions
      At line 40 in file ..\OS\os_port.s
   Uses
      At line 19 in file ..\OS\os_port.s
Comment: OSStart_Asm used once
OS_CPU_PendSVHandler_nosave 0000004E

Symbol: OS_CPU_PendSVHandler_nosave
   Definitions
      At line 76 in file ..\OS\os_port.s
   Uses
      At line 66 in file ..\OS\os_port.s
Comment: OS_CPU_PendSVHandler_nosave used once
OS_CPU_SR_Restore 00000008

Symbol: OS_CPU_SR_Restore
   Definitions
      At line 30 in file ..\OS\os_port.s
   Uses
      At line 23 in file ..\OS\os_port.s
Comment: OS_CPU_SR_Restore used once
OS_CPU_SR_Save 00000000

Symbol: OS_CPU_SR_Save
   Definitions
      At line 25 in file ..\OS\os_port.s
   Uses
      At line 22 in file ..\OS\os_port.s
Comment: OS_CPU_SR_Save used once
PendSV_Handler 0000003A

Symbol: PendSV_Handler



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 63 in file ..\OS\os_port.s
   Uses
      At line 20 in file ..\OS\os_port.s
Comment: PendSV_Handler used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NVIC_INT_CTRL E000ED04

Symbol: NVIC_INT_CTRL
   Definitions
      At line 1 in file ..\OS\os_port.s
   Uses
      At line 35 in file ..\OS\os_port.s
      At line 52 in file ..\OS\os_port.s

NVIC_PENDSVSET 10000000

Symbol: NVIC_PENDSVSET
   Definitions
      At line 4 in file ..\OS\os_port.s
   Uses
      At line 36 in file ..\OS\os_port.s
      At line 53 in file ..\OS\os_port.s

NVIC_PENDSV_PRI 000000FF

Symbol: NVIC_PENDSV_PRI
   Definitions
      At line 3 in file ..\OS\os_port.s
   Uses
      At line 42 in file ..\OS\os_port.s
Comment: NVIC_PENDSV_PRI used once
NVIC_SYSPRI14 E000ED22

Symbol: NVIC_SYSPRI14
   Definitions
      At line 2 in file ..\OS\os_port.s
   Uses
      At line 41 in file ..\OS\os_port.s
Comment: NVIC_SYSPRI14 used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

g_OS_CPU_ExceptStkBase 00000000

Symbol: g_OS_CPU_ExceptStkBase
   Definitions
      At line 12 in file ..\OS\os_port.s
   Uses
      At line 48 in file ..\OS\os_port.s
Comment: g_OS_CPU_ExceptStkBase used once
g_OS_Tcb_CurP 00000000

Symbol: g_OS_Tcb_CurP
   Definitions
      At line 14 in file ..\OS\os_port.s
   Uses
      At line 71 in file ..\OS\os_port.s
      At line 83 in file ..\OS\os_port.s

g_OS_Tcb_HighRdyP 00000000

Symbol: g_OS_Tcb_HighRdyP
   Definitions
      At line 15 in file ..\OS\os_port.s
   Uses
      At line 84 in file ..\OS\os_port.s
Comment: g_OS_Tcb_HighRdyP used once
g_Prio_Cur 00000000

Symbol: g_Prio_Cur
   Definitions
      At line 16 in file ..\OS\os_port.s
   Uses
      At line 78 in file ..\OS\os_port.s
Comment: g_Prio_Cur used once
g_Prio_HighRdy 00000000

Symbol: g_Prio_HighRdy
   Definitions
      At line 17 in file ..\OS\os_port.s
   Uses
      At line 79 in file ..\OS\os_port.s
Comment: g_Prio_HighRdy used once
5 symbols
354 symbols in table
